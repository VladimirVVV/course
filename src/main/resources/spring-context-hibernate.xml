<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <context:property-placeholder location="classpath*:jdbc-param.properties" />

    <context:annotation-config/>
    <tx:annotation-driven transaction-manager="txManager"/>

    <bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.login}"/>
        <property name="password" value="${db.pass}"/>
    </bean>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="phoneDAO" class="com.courses.phones.dao.PhoneDAOHibernate">
        <constructor-arg ref="sessionFactoryPostgres" />
    </bean>

    <!--<bean id="phoneDAO" class="com.courses.phones.dao.PhoneDAOJdbc">-->
        <!--<constructor-arg ref="jdbcTemplate" />-->
    <!--</bean>-->

    <bean id="phoneServiceImpl" class="com.courses.phones.domain.PhoneServiceImpl">
        <constructor-arg ref="phoneDAO" />
    </bean>



    <bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="sessionFactoryPostgres"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <property name="packagesToScan" value="com.courses.phones"/>
            <property name="hibernateProperties">
                <value>
                    hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
                    hibernate.show_sql=true
                    hibernate.hbm2ddl.auto=create-drop
                </value>
            </property>
    </bean>
</beans>

    <!--<bean id="sessionFactoryPostgres" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">-->
        <!--<property name="packagesToScan" value="com.courses.phones"/>-->
        <!--<property name="hibernateProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.current_session_context_class">thread</prop>-->
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>-->
                <!--<prop key="hibernate.connection.driver_class">org.postgresql.Driver</prop>-->
                <!--<prop key="hibernate.connection.url">jdbc:postgresql://localhost:5432/postgres</prop>-->
                <!--<prop key="hibernate.connection.username">postgres</prop>-->
                <!--<prop key="hibernate.connection.password">admin</prop>-->
                <!--<prop key="hibernate.connection.pool_size">1</prop>-->
                <!--<prop key="hibernate.show_sql">false</prop>-->
                <!--<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>-->
                <!--&lt;!&ndash;<prop key="hibernate.connection.autocommit">false</prop>&ndash;&gt;-->
                <!--<prop key="hibernate.hbm2ddl.auto">create-drop</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->
